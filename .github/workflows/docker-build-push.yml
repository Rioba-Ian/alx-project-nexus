name: Build, Push and Deploy Jobs Board

on:
 push:
  branches: [main]
  tags:
   - "v*"
 pull_request:
  branches: [main]
 workflow_dispatch:

env:
 DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/jobs-board
 SECRET_KEY: ${{ secrets.SECRET_KEY }}
 R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
 R2_ENDPOINT_URL: ${{ secrets.R2_ENDPOINT_URL }}
 R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
 R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}

jobs:
 build-and-push:
  runs-on: ubuntu-latest

  steps:
   - name: Check out the repo
     uses: actions/checkout@v3

   - name: Set up Docker Buildx
     uses: docker/setup-buildx-action@v2

   - name: Log in to Docker Hub
     uses: docker/login-action@v2
     with:
      username: ${{ secrets.DOCKER_USERNAME }}
      password: ${{ secrets.DOCKER_PASSWORD }}

   - name: Extract metadata (tags, labels) for Docker
     id: meta
     uses: docker/metadata-action@v4
     with:
      images: ${{ env.DOCKER_IMAGE }}
      tags: |
       type=ref,event=branch
       type=ref,event=pr
       type=semver,pattern={{version}}
       type=semver,pattern={{major}}.{{minor}}
       type=sha,format=short
       type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

   - name: Build and push Docker image
     uses: docker/build-push-action@v4
     with:
      context: .
      file: ./Dockerfile.prod
      push: ${{ github.event_name != 'pull_request' }}
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
      cache-from: type=gha
      cache-to: type=gha,mode=max
      build-args: |
       DOCKER_BUILDKIT=1
       DATABASE_URL=${{ secrets.DATABASE_URL }}

 test:
  runs-on: ubuntu-latest
  needs: build-and-push
  if: github.event_name != 'pull_request'

  steps:
   - name: Check out the repo
     uses: actions/checkout@v3

   - name: Set up Python
     uses: actions/setup-python@v4
     with:
      python-version: "3.13"

   - name: Install dependencies
     run: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt

   - name: Run tests
     run: |
      echo "Running tests..."
      export DATABASE_URL=${{ secrets.DATABASE_URL }}
      python manage.py test
